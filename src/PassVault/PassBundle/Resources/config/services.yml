services:

    passvault.event_listener.vault_event_listener:
        class: PassVault\PassBundle\EventListener\VaultEventListener
        arguments:
            - @service_container
        tags:
            - { name: doctrine.event_listener, event: postLoad }
            - { name: doctrine.event_listener, event: prePersist }

    passvault.twig.class_extension:
        class: PassVault\PassBundle\Twig\ClassExtension
        tags:
            - { name: twig.extension }

    pass_vault.security_voter.node_voter:
        class: PassVault\PassBundle\Security\Authorization\Voter\NodeVoter
        arguments:
            - @service_container
        tags:
            - { name: security.voter }

    passvault.form_type.node_type:
        class: PassVault\PassBundle\Form\Type\NodeType
        arguments:
            - @service_container
        tags:
            - { name: form.type, alias: node }

    passvault.form_type.vault_type:
        class: PassVault\PassBundle\Form\Type\VaultType
        arguments:
            - @service_container
        tags:
            - { name: form.type, alias: vault }

    passvault.form_type.folder_type:
        class: PassVault\PassBundle\Form\Type\FolderType
        arguments:
            - @service_container
        tags:
            - { name: form.type, alias: folder }

    passvault.form_type.password_type:
        class: PassVault\PassBundle\Form\Type\PassvaultType
        arguments:
            - @service_container
        tags:
            - { name: form.type, alias: passvault }

    passvault.form_type.nodeteam_type:
        class: PassVault\PassBundle\Form\Type\NodeTeamType
        arguments:
            - @service_container
        tags:
            - { name: form.type, alias: nodeteam }

    passvault.form_type.nodeuser_type:
        class: PassVault\PassBundle\Form\Type\NodeUserType
        arguments:
            - @service_container
        tags:
            - { name: form.type, alias: nodeuser }